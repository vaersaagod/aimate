{"version":3,"file":"aimate.js","sources":["../../../../build/src/components/CustomPromptModal.js","../../../../build/src/aimate.js"],"sourcesContent":["const CustomPromptModal = Garnish.Modal.extend({\n    init: function () {\n\n        this.base();\n        this.setSettings({\n            resizable: true,\n        });\n\n        const $modalContainerDiv = $(\n            '<div class=\"modal fitted aimate-customprompt\"></div>'\n        )\n            .addClass()\n            .appendTo(Garnish.$bod);\n\n        const $body = $(`\n                <div class=\"body\" style=\"display:flex;flex-direction:column;min-height:100%;\">\n                    <div class=\"header\" style=\"flex: none;\">\n                        <h1 style=\"margin-bottom:10px;\">Custom prompt</h1>\n                        <p class=\"notice has-icon\">\n                            <span class=\"icon\" aria-hidden=\"true\"></span>\n                            <span>Add a &lt;text&gt; token to the prompt to include the current value in the field.</span>\n                        </p>\n                    </div>\n                    <form method=\"post\" accept-charset=\"UTF-8\" style=\"display:flex;height:100%;flex: 1 1 auto;position:relative;\">\n                        <textarea style=\"width:420px;min-width:100%;max-width:100%;resize:none;padding:10px;\"></textarea>\n                    </form>\n                </div>\n            `).appendTo(\n            $modalContainerDiv.empty()\n        );\n\n        const $footer = $('<div class=\"footer\"/>').appendTo($body);\n        const $footerBtnContainer = $('<div class=\"buttons right\"/>').appendTo($footer);\n        const $cancelBtn = $('<button/>', {\n            type: 'button',\n            class: 'btn',\n            text: Craft.t('app', 'Cancel'),\n        }).appendTo($footerBtnContainer);\n\n        const $applyBtn = Craft.ui\n            .createSubmitButton({ label: Craft.t('app', 'Apply') })\n            .appendTo($footerBtnContainer);\n\n        this.$textarea = $body.find('textarea');\n\n        this.addListener($cancelBtn, 'click', 'onCancel');\n        this.addListener($applyBtn, 'click', 'onApply');\n\n        const _this = this;\n\n        this.$textarea = $modalContainerDiv.find('textarea');\n\n        this.setContainer($modalContainerDiv);\n\n    },\n\n    onShow: function () {\n        const _this = this;\n        this.promise = new Promise((resolve, reject) => {\n            _this.reject = reject;\n            _this.resolve = resolve;\n        });\n    },\n\n    onHide: function () {\n        this.$textarea.val('');\n    },\n\n    onCancel: function () {\n        this.resolve();\n        this.hide();\n    },\n\n    onApply: function () {\n        this.resolve(this.$textarea.val());\n        this.hide();\n    },\n\n    getText: function () {\n        return this.promise;\n    }\n\n});\n\nexport default CustomPromptModal;\n","import CustomPromptModal from \"./components/CustomPromptModal.js\";\n\nimport './aimate.scss';\n\n$(() => {\n\n    let customPromptModal;\n\n    const onPromptClick = async e => {\n        e.preventDefault();\n        const {currentTarget: promptLink} = e;\n        const menu = promptLink.closest('[data-aimate-menu]');\n        const menuButton = document.querySelector(`button[aria-controls=\"${menu.id}\"]`);\n        if (menuButton.classList.contains('loading')) {\n            return;\n        }\n        $(menuButton).trigger('click');\n        const {field: fieldId, element: elementId, site: siteId} = menuButton.dataset;\n        const field = menuButton.closest('.field');\n        if (!field) {\n            Craft.cp.displayError('Field not found');\n            return;\n        }\n        const {type: fieldType} = field.dataset;\n        let input;\n        if (fieldType === 'craft\\\\fields\\\\Table') {\n            input = menuButton.closest('td.textual').querySelector('input,textarea');\n        } else {\n            input = menuButton.closest('.input').querySelector('input,textarea');\n        }\n        if (!input) {\n            Craft.cp.displayError('Input not found');\n            return;\n        }\n        let params = {};\n        if (promptLink.hasAttribute('data-custom')) {\n            if (!customPromptModal) {\n                customPromptModal = new CustomPromptModal();\n            }\n            customPromptModal.show();\n            const customPrompt = await customPromptModal.getText();\n            if (!customPrompt) {\n                return;\n            }\n            params.custom = customPrompt;\n        } else {\n            const {prompt} = promptLink.dataset;\n            if (!prompt) {\n                Craft.cp.displayError('No prompt');\n                return;\n            }\n            params.prompt = prompt;\n        }\n        const elementEditor = $(input.closest('[data-element-editor]')).data('elementEditor');\n        params = {\n            ...params,\n            elementId,\n            siteId\n        };\n        if (elementEditor) {\n            params = {\n                ...params,\n                draftId: elementEditor.settings.draftId,\n                isProvisionalDraft: elementEditor.settings.isProvisionalDraft\n            };\n        }\n        menuButton.classList.add('loading');\n        Craft.sendActionRequest(\n            'POST',\n            '_aimate/default/do-prompt',\n            {\n                data: {\n                    text: input.value,\n                    ...params\n                }\n            }\n        )\n            .then(res => {\n                const {data} = res;\n                if (!data.text) {\n                    return;\n                }\n                const field = input.closest('.field');\n                const {type: fieldType} = field.dataset;\n                if (fieldType === 'craft\\\\ckeditor\\\\Field') {\n                    const editable = field.querySelector('.ck-editor__editable');\n                    const ckEditorInstance = editable ? editable.ckeditorInstance : null;\n                    if (!ckEditorInstance) {\n                        throw new Error('Unable to find CKEditor instance in DOM');\n                    }\n                    ckEditorInstance.focus();\n                    ckEditorInstance.execute('selectAll');\n                    const viewFragment = ckEditorInstance.data.processor.toView(data.text);\n                    const modelFragment = ckEditorInstance.data.toModel(viewFragment);\n                    ckEditorInstance.model.insertContent(modelFragment);\n                } else if (fieldType === 'craft\\\\redactor\\\\Field') {\n                    const redactorInstance = $R(`#${input.id}`);\n                    redactorInstance.editor.focus();\n                    redactorInstance.insertion.set(data.text);\n                    redactorInstance.source.getElement().val(data.text);\n                } else {\n                    input.focus();\n                    input.select();\n                    if (!document.execCommand('insertText', false, data.text)) {\n                        input.setRangeText(data.text);\n                    }\n                }\n                if (elementEditor) {\n                    elementEditor.checkForm();\n                }\n            })\n            .catch(({response}) => {\n                Craft.cp.displayError(response.message || response.data.message);\n            })\n            .catch(error => {\n                console.error(error);\n            })\n            .then(() => {\n                menuButton.classList.remove('loading');\n                input.focus();\n            });\n    };\n\n    const initTableRow = $tr => {\n        const field = $tr.get(0).closest('.field');\n        if (!field) {\n            return;\n        }\n        const aimateButton = field.querySelector('button[data-aimate]');\n        if (!aimateButton) {\n            return;\n        }\n        const tds = $tr.children().get().filter(td => td.classList.contains('singleline-cell', 'multiline-cell'));\n        const trId = $tr.index();\n        tds.forEach(td => {\n            const $aimateButton = $(aimateButton).clone(false, true);\n            const menuId = $aimateButton.attr('aria-controls');\n            const $menu = $($(`#${menuId}`)).clone(false, true);\n            const textarea = td.querySelector('textarea');\n            const tdId = `${trId}-${$(td).index()}`;\n            $menu.attr('id', `${$menu.attr('id')}-${trId}-${tdId}`);\n            $('body').append($menu);\n            $aimateButton.attr('aria-controls', $menu.attr('id'));\n            $(textarea.parentNode).prepend($aimateButton.disclosureMenu());\n        });\n    };\n\n    $('.field table.editable tbody tr').each(function () {\n        initTableRow($(this));\n    });\n\n    const rowInitFn = Craft.EditableTable.Row.prototype.init;\n    Craft.EditableTable.Row.prototype.init = function () {\n        rowInitFn.apply(this, arguments);\n        initTableRow(this.$tr);\n    };\n\n    $('body').on('click', '[data-aimate-menu] a', onPromptClick);\n\n});\n\n// Accept HMR as per: https://vitejs.dev/guide/api-hmr.html\nif (import.meta.hot) {\n    import.meta.hot.accept();\n}\n"],"names":["CustomPromptModal","$modalContainerDiv","$body","$footer","$footerBtnContainer","$cancelBtn","$applyBtn","_this","resolve","reject","customPromptModal","onPromptClick","e","promptLink","menu","menuButton","fieldId","elementId","siteId","field","fieldType","input","params","customPrompt","prompt","elementEditor","res","data","editable","ckEditorInstance","viewFragment","modelFragment","redactorInstance","response","error","initTableRow","$tr","aimateButton","tds","td","trId","$aimateButton","menuId","$menu","textarea","tdId","rowInitFn"],"mappings":"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"}